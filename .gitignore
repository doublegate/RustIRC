# Rust
# Generated by Cargo
# will have compiled files and executables
debug/
target/

# Remove Cargo.lock from gitignore if creating an executable, leave it for libraries
# More information here https://doc.rust-lang.org/cargo/guide/cargo-toml-vs-cargo-lock.html
# Cargo.lock

# These are backup files generated by rustfmt
**/*.rs.bk

# MSVC Windows builds of rustc generate these, which store debugging information
*.pdb

# RustIRC specific build artifacts
/build/
/dist/
/release/

# Python
# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# Python virtual environments
.venv/
venv/
ENV/
env/
.Python

# PyO3 specific
.python-version
*.so
*.pyd
*.dll

# Lua
# Compiled Lua sources
luac.out

# luarocks build files
*.src.rock
*.zip
*.tar.gz

# Lua modules
*.lua.c

# IDE and Editor files
# Visual Studio Code
.vscode/
*.code-workspace

# IntelliJ/CLion
.idea/
*.iml
*.iws
*.ipr
out/
cmake-build-*/

# Vim
*.swp
*.swo
*.swn
*.vim
.*.sw[a-z]
Session.vim
.netrwhist
tags

# Emacs
*~
\#*\#
/.emacs.desktop
/.emacs.desktop.lock
*.elc
auto-save-list
tramp
.\#*

# Sublime Text
*.sublime-project
*.sublime-workspace

# Operating System Files
# macOS
.DS_Store
.AppleDouble
.LSOverride
._*
.Spotlight-V100
.Trashes

# Windows
Thumbs.db
ehthumbs.db
Desktop.ini
$RECYCLE.BIN/
*.lnk

# Linux
.directory
.Trash-*
.nfs*

# Development files
# Logs
logs/
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Test coverage
*.lcov
coverage/
.coverage
htmlcov/
.pytest_cache/
.hypothesis/
cobertura.xml
tarpaulin-report.html
*.profraw

# Benchmarking
*.bench
criterion/
perf.data*

# Documentation build
docs/_build/
docs/.doctrees/
site/
/target/doc/
*.rustdoc

# Configuration
# Local configuration files
*.local
.env
.env.local
.env.*.local
config.local.toml
settings.local.json

# Security - never commit these
*.pem
*.key
*.cert
*.p12
*.pfx
.secrets/
credentials.json

# RustIRC specific
# User data and state
/data/
/state/
/cache/
*.db
*.sqlite
*.sqlite3

# Script development
/scripts/temp/
/scripts/test/
/plugins/temp/
/plugins/test/

# Downloaded scripts/plugins
/scripts/downloaded/
/plugins/downloaded/

# Crash dumps
*.dmp
*.core
core.*

# Profiling
*.prof
*.profdata
*.profraw
callgrind.out.*

# Package files
*.deb
*.rpm
*.dmg
*.pkg
*.msi
*.exe
*.app
*.AppImage
*.snap

# Archive files (but keep ref_docs/archive)
*.tar
*.tar.gz
*.tar.bz2
*.tar.xz
*.zip
*.7z
*.rar
!ref_docs/**/*.tar.gz
!ref_docs/**/*.zip

# Temporary files
tmp/
temp/
*.tmp
*.temp
*.bak
*.backup
*.old
*.orig

# Lock files (except Cargo.lock for binary crates)
package-lock.json
yarn.lock
poetry.lock
Pipfile.lock

# Misc
# .cargo/config.toml - Include our build config for gcc linker
.rustc_info.json
rust-project.json
.cargo-ok
.fingerprint/
incremental/

# Development toolchain files (keep our optimized configs)
# rustfmt.toml - Keep our stable-only configuration
# rust-toolchain.toml - Keep our enhanced component configuration
# clippy.toml - Keep our lint configuration

# Local notes and drafts (but keep project docs)
/notes/
/drafts/
TODO.personal.md
NOTES.personal.md
CLAUDE.local.md
!docs/
!to-dos/

# CI/CD artifacts
.github/workflows/*.local.yml
artifacts/
dist/

# Screenshot files (keep only the first one)
images/Screenshot_[2-9].png
images/Screenshot_[0-9][0-9].png
images/Screenshot_[0-9][0-9][0-9].png