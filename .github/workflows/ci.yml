name: CI

on:
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      rust_version:
        description: 'Rust toolchain to test'
        required: false
        default: 'stable'
        type: choice
        options: [ stable, beta, nightly ]

permissions:
  contents: read

concurrency:
  group: ci-${{ github.ref }}-${{ github.workflow }}-${{ github.run_id }}
  cancel-in-progress: false

jobs:
  test:
    name: Test (${{ matrix.os }}, ${{ matrix.rust }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, macos-14, windows-2022 ]
        rust: [ ${{ inputs.rust_version || 'stable' }} ]
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}
          components: clippy

      # Cargo registry/git cache to reduce network churn. Keys are unique per OS+toolchain to avoid 409s.
      - name: Cache cargo registry + git + target
        id: cargo-cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ matrix.rust }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-${{ matrix.rust }}-

      # sccache (uses GitHub cache storage under the hood)
      - name: Enable sccache
        uses: Mozilla-Actions/sccache-action@v0.0.9
        with:
          # keep default (GHA backend). The action sets RUSTC_WRAPPER & SCCACHE_GHA_ENABLED.
          # We keep this step early so subsequent cargo steps benefit.
          version: 'v0.10.0'

      - name: Show tool versions
        run: |
          rustc -Vv
          cargo -V
          sccache --version || true

      - name: Build (debug)
        run: cargo build --all-features --all-targets

      - name: Clippy (deny warnings)
        run: cargo clippy --all-features --all-targets -- -D warnings

      - name: Tests
        env:
          RUST_TEST_THREADS: 1
        run: cargo test --all-features --all-targets --locked

      - name: Doc build (no-deps)
        run: cargo doc --no-deps

      - name: Print sccache stats
        if: always()
        run: |
          sccache --show-stats || true
